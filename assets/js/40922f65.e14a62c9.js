"use strict";(self.webpackChunkopm_documentation=self.webpackChunkopm_documentation||[]).push([[5049],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(r),f=o,m=p["".concat(c,".").concat(f)]||p[f]||d[f]||i;return r?n.createElement(m,a(a({ref:t},u),{},{components:r})):n.createElement(m,a({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3864:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const i={title:"Architecture",sidebar_position:2,contributor:"Kevin Jang"},a="Architecture",l={unversionedId:"calla-lily/architecture",id:"calla-lily/architecture",title:"Architecture",description:"Headless CMS",source:"@site/docs/calla-lily/architecture.md",sourceDirName:"calla-lily",slug:"/calla-lily/architecture",permalink:"/docs/calla-lily/architecture",draft:!1,editUrl:"https://github.com/Other-People-UCSD/docs/tree/main/docs/calla-lily/architecture.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Architecture",sidebar_position:2,contributor:"Kevin Jang"},sidebar:"docsSidebar",previous:{title:"Getting Started",permalink:"/docs/calla-lily/getting-started"},next:{title:"Rebuild Release Notes",permalink:"/docs/calla-lily/calla-lily-release"}},c={},s=[{value:"Headless CMS",id:"headless-cms",level:2},{value:"GitHub Repository",id:"github-repository",level:2}],u={toc:s},p="wrapper";function d(e){let{components:t,...i}=e;return(0,o.kt)(p,(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"architecture"},"Architecture"),(0,o.kt)("h2",{id:"headless-cms"},"Headless CMS"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"System Diagram of the Headless CMS",src:r(841).Z,width:"1652",height:"1028"})),(0,o.kt)("h2",{id:"github-repository"},"GitHub Repository"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"/\n| \n\u251c\u2500\u2500 _posts              # Published posts, organized into folders\n|\n\u251c\u2500\u2500 components          # Building blocks for webpages\n\u251c\u2500\u2500 lib                 # Helper functions that run the backend of the framework\n|\n\u251c\u2500\u2500 data                # Centralized JSON files used to modify multiple pages together\n\u251c\u2500\u2500 pages               # The pages that are compiled and deployed on the website\n|   \u251c\u2500\u2500 _app.js         # The container for all components\n|   \u251c\u2500\u2500 _document.js    # Updates the html and body tags\n|   \u251c\u2500\u2500 index.js        # Homepage\n|   \u251c\u2500\u2500 [...slug].js    # Dynamic router to build all posts in _posts\n|   \u2514\u2500\u2500 api             # API Routing Endpoints\n|\n\u251c\u2500\u2500 styles              # CSS using CSS Modules and SASS\n\u251c\u2500\u2500 public              # Styling the website\n|   \u251c\u2500\u2500 favicons        # Other People Logo\n|   \u251c\u2500\u2500 fonts           # Basier Mono Circle\n|   \u251c\u2500\u2500 images          # Folder for media and images, organized into folders\n|   \u251c\u2500\u2500 js              # Functionality for interactive elements\n|   |\n|   \u2514\u2500\u2500 production      # Autogenerated TinaCMS route for content editing \n\u251c\u2500\u2500 tina                # TinaCMS configuration and schema\n|\n\u2514\u2500\u2500 next.config.js      # Configuration for Next.JS framework\n")))}d.isMDXComponent=!0},841:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/headless-cms-architecture-d224eb0e63875e1133c5660acf0a6dd1.png"}}]);